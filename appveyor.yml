version: "{build}"
build: off
environment:
  PYPI_USERNAME:
    secure: 20LVRUqPdKxWydU70DgLxA==
  PYPI_PASSWORD:
    secure: g599B1DPNusI9H8GYIq6yn4CiRsVMRqtDm9nyb7MEjQ=
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python38"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "32"
      STACK: "3.8"

stack: python %STACK%

install:
  - cmd: |
      %PYTHON%\python.exe --version
      %PYTHON%\Scripts\pip.exe --version
      %PYTHON%\python.exe -m pip install -r requirements-dev.txt
  - pwsh: |
      $version=&"$($env:PYTHON)\python.exe" -c --% "from pyage import __version__; import sys; _ = sys.stderr.write(__version__)" 2>&1 1>nul
      Update-AppveyorBuild -Version "$($version)+$($env:APPVEYOR_BUILD_NUMBER)"
build_script:
  - cmd: |
      %PYTHON%\\python.exe setup.py bdist_wheel --universal

artifacts:
  - path: dist/*.whl

deploy:
  auth_token:
    secure: nDRVQFKcEJ6fVXxCI19uErnRxs6f88vuto7OZ8BYR+GN3fX6pzZzlyBGeKdrKpgA
  description: 'pyAGE release, see readme or changelog for more information'
  provider: GitHub
  artifact: dist/*.whl
  on:
    APPVEYOR_REPO_TAG: true

after_deploy:
  - ps: |
      Write-Output ("Deploying " + $env:APPVEYOR_REPO_TAG_NAME + " to PyPI...")
      &"${Env:PYTHON}/python.exe" -m pip install twine
      &"${Env:PYTHON}/python.exe" -m twine upload -u ${Env:PYPI_USERNAME} -p ${Env:PYPI_PASSWORD} --skip-existing dist/\*.whl
